# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2018-04-17 06:27
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(max_length=255, verbose_name='邮箱地址')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'userprofile',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='一级菜单名', max_length=64, unique=True, verbose_name='菜单名')),
                ('seq', models.PositiveSmallIntegerField(help_text='菜单导航显示的顺序', verbose_name='序列号')),
                ('comment', models.TextField(blank=True, help_text='备注说明', null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '一级菜单',
                'verbose_name_plural': '一级菜单',
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='Menu2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='二级菜单名', max_length=64, unique=True, verbose_name='菜单名')),
                ('seq', models.PositiveSmallIntegerField(help_text='菜单导航显示的顺序', verbose_name='序列号')),
                ('url_type', models.PositiveSmallIntegerField(choices=[(0, '相对URL'), (1, '绝对URL')], default=0, help_text='选择相对URL还是绝对URL', verbose_name='URL类型')),
                ('url', models.CharField(help_text='输入URL地址', max_length=128, verbose_name='URL地址')),
                ('comment', models.TextField(blank=True, help_text='备注说明', null=True, verbose_name='备注')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='juser.Menu', verbose_name='选择上级菜单')),
            ],
            options={
                'verbose_name': '二级菜单',
                'verbose_name_plural': '二级菜单',
                'db_table': 'menu2',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='角色名')),
                ('comment', models.TextField(blank=True, help_text='备注说明', null=True, verbose_name='备注')),
                ('menu', models.ManyToManyField(to='juser.Menu', verbose_name='分配菜单功能')),
            ],
            options={
                'verbose_name': '角色管理',
                'verbose_name_plural': '角色管理',
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='用户组名')),
                ('comment', models.TextField(blank=True, help_text='备注说明', null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '用户组管理',
                'verbose_name_plural': '用户组管理',
                'db_table': 'usergroup',
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role',
            field=models.ManyToManyField(to='juser.Role'),
        ),
    ]
